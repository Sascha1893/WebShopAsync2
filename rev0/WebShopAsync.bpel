<!-- WebShopAsync BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sun Dec 11 17:44:48 CET 2016 -->
<bpel:process name="WebShopAsync"
         targetNamespace="http://iaas.uni-stuttgart.de/labs/FlowSOG"
         suppressJoinFailure="yes"
         xmlns:tns="http://iaas.uni-stuttgart.de/labs/FlowSOG"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://www.w3.org/2001/XMLSchema">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG" location="BPMLabServices.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="WebShopAsyncArtifacts.wsdl" namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:WebShopAsync"
                     myRole="WebShopAsyncProvider"
                     />
        
        
        <bpel:partnerLink name="InventoryServicePartner" partnerLinkType="tns:InventoryServicePartnerType" partnerRole="service" myRole="callback"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:WebShopAsyncRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:WebShopAsyncResponseMessage"/>
        
        <bpel:variable name="InventoryServicePartnerRequest" messageType="tns:checkAvailabilityAsyncInput"></bpel:variable>
        <bpel:variable name="InventoryServicePartnerRequest1" messageType="tns:onFinishCheckAvailabilityInput"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:correlationSets>
        <bpel:correlationSet name="CustomerIDCorrelationSet" properties="tns:customerID"></bpel:correlationSet>
    </bpel:correlationSets>
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in WebShopAsync.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 createInstance="yes" operation="process" portType="tns:WebShopAsync" variable="input"/>
        
        <!-- Generate reply to synchronous request -->
        <bpel:assign validate="no" name="AssignInput">
            <bpel:copy>
                <bpel:from><bpel:literal><tns:WebShopAsyncResponse xmlns:tns="http://iaas.uni-stuttgart.de/labs/FlowSOG" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:outputOrder>tns:outputOrder</tns:outputOrder>
</tns:WebShopAsyncResponse>
</bpel:literal></bpel:from>
                <bpel:to variable="output" part="payload"></bpel:to>
            </bpel:copy>
            
            <bpel:copy>
                <bpel:from>
                    <bpel:literal xml:space="preserve"><FlowSOG:onFinishCheckAvailability xmlns:FlowSOG="http://iaas.uni-stuttgart.de/labs/FlowSOG" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <FlowSOG:customerId>FlowSOG:customerId</FlowSOG:customerId>
  <FlowSOG:productList>
    <FlowSOG:product>
      <FlowSOG:id>FlowSOG:id</FlowSOG:id>
      <FlowSOG:name>FlowSOG:name</FlowSOG:name>
      <FlowSOG:producer>FlowSOG:producer</FlowSOG:producer>
      <FlowSOG:weight>0.0</FlowSOG:weight>
      <FlowSOG:price>0.0</FlowSOG:price>
      <FlowSOG:status>
        <FlowSOG:currentAvailability>available</FlowSOG:currentAvailability>
        <FlowSOG:availableAgainInDays>0</FlowSOG:availableAgainInDays>
      </FlowSOG:status>
    </FlowSOG:product>
  </FlowSOG:productList>
</FlowSOG:onFinishCheckAvailability>
</bpel:literal>
                </bpel:from>
                <bpel:to part="onFinishCheckAvailabilityInput" variable="InventoryServicePartnerRequest1"></bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:assign validate="no" name="AssignAsyncVorhanden">
            <bpel:copy>
                <bpel:from><bpel:literal><FlowSOG:checkAvailabilityAsync xmlns:FlowSOG="http://iaas.uni-stuttgart.de/labs/FlowSOG" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <FlowSOG:callbackUrl>FlowSOG:callbackUrl</FlowSOG:callbackUrl>
  <FlowSOG:customerId>FlowSOG:customerId</FlowSOG:customerId>
  <FlowSOG:productId>FlowSOG:productId</FlowSOG:productId>
</FlowSOG:checkAvailabilityAsync>
</bpel:literal></bpel:from>
                <bpel:to variable="InventoryServicePartnerRequest" part="checkAvailabilityAsyncInput"></bpel:to>
            </bpel:copy>
            
            
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:inputOrder/tns:products/tns:product[1]/tns:productId]]></bpel:query>
                </bpel:from>
                <bpel:to part="checkAvailabilityAsyncInput" variable="InventoryServicePartnerRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:productId[1]]]></bpel:query>
                </bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:inputOrder/tns:customerID]]></bpel:query>
                </bpel:from>
                <bpel:to part="checkAvailabilityAsyncInput" variable="InventoryServicePartnerRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:customerId]]></bpel:query>
                </bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:inputOrder/tns:callbackURL]]></bpel:query>
                </bpel:from>
                <bpel:to part="checkAvailabilityAsyncInput" variable="InventoryServicePartnerRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:callbackUrl]]></bpel:query>
                </bpel:to>
            </bpel:copy>
        </bpel:assign>
        
        <bpel:invoke name="InvokeAsyncVorhanden" partnerLink="InventoryServicePartner" operation="checkAvailabilityAsync" portType="tns:InventoryPortType" inputVariable="InventoryServicePartnerRequest">
            <bpel:correlations>
                <bpel:correlation set="CustomerIDCorrelationSet" initiate="yes"></bpel:correlation>
            </bpel:correlations>
        </bpel:invoke>
        <bpel:receive name="ReceiveAsyncVorhanden" partnerLink="InventoryServicePartner" operation="onFinishCheckAvailability" portType="tns:InventoryCallbackPortType" variable="InventoryServicePartnerRequest1">
            <bpel:correlations>
                <bpel:correlation set="CustomerIDCorrelationSet" initiate="no"></bpel:correlation>
            </bpel:correlations>
        </bpel:receive>
        <bpel:reply name="replyOutput" 
               partnerLink="client" operation="process" portType="tns:WebShopAsync" variable="output"/>
    </bpel:sequence>
</bpel:process>
